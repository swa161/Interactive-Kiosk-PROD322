---CHANGE LOG---
[1.2.3:35]
	*Fixed bug with building projects
	*Uploaded for more versions of unity

[1.2.2:34]
    *Found and fixed screen space canvas bug.
    *Found and fixed bug, reskinning did not color button text correctly.
    *Reskinning now checks if there is text on the button before it reskins it.
    *Reskinning now checks if the provided prefab is not null before trying to copy it.
    *Added example for dragable/resizeable tabs.

[1.2.1:33]  Added a button to TabManager Inspector to reskin tabs. Also added GUI Guide Documentation.

[1.2.0:32] Added Reskin Functions
    * Updated Code Documentation

[1.1.4:31] Created Helper class and moved functions into it.

[1.1.3:30] TabContainer class can now use GameObject or resource paths to create tabs with prefabed buttons and panels
    * Shortened InsertTab code
    * Renamed some functions for inserting tabs
    * Added more functions for inserting tabs
    * TODO: create a helper function which stretches a RectTransform to fill an object
    * TODO: create a class for helper functions

[1.1.2:29] Added Function InsertTabObject which InserTab now uses, it lets you specify the prefabs using GameObjects instead of strings.

[1.1.1:28] Changed it so that InsertTab uses prefabs
    * Started code for reskinning tabs
    * TODO: finish reskinning code
    * TODO: update documentation
    * TODO: let user set prefabs when programming TabContainer

[1.1.0:27] Fixed bug, added prefabs, added config class.
    * Fixed the bug where tabs were not being created in build
    * Created prefabs and updated code to use them
    * Added a CreateBLANKTabContainer function, just in case.
    * Added TabConfig class where all the configs for this plug in are stored,
    * Updated documentation

[1.0.4:26] Tested for Bug, Found
    * Adding Tabs programatically does not work!!! This needs fixed!

[1.0.3:25] Added RemoveAllTabs option to TabManager

[1.0.2:24] Checked for bug, didn't find it. Changed version number in Documentation.

[1.0.2:23] Fixed Bug and moved CreateTabContainer
    * Found and Fixed bugs which didn't allow the scene to be built and run
    * Moved CreateTabContainer to it;s own class called TabConainter
    * Removed SudoCode
    * Updated Documentation

[1.0.1:22] Fixed a bug which happened when deleting the last tab

[1.0.0:21] First release

[A.8.1:20] Fixed some Typos

[A.8.0:19] Finished Examples

[A.7.1:18] Added a couple lines to the examples documentation

[A.7.0:17] Finished writing most of the Code Documentation
    * Finished Code Documentation except for the intro.
    * Tweaked some variable names across all classes to make them more reader friendly.
    * Changed InsertTab function, if the btnTxt variable is blank, it won't add a text element to the button at all.

[A.6.2:16] Added some more documentation
    * Started working on Code Documentation
    * Changed TabButton.cs to be less dependant on hierarchy.
    * Made Tab.cs more reable.

[A.6.1:15] Bug Fix
    * Fixed the bug where undoing a move didn't work in a similar way to how I fixed the RemoveTab undo

[A.6.0:14] Started adding Documentation.
    * Added 3 example scenes with text instructions.
    * Added Examples Walkthrough.pdf with instructions and pictures.

[A.5.2:13] Fixed Bug
    * Fixed a bug with the switch_to_new options
    * Started working on some example scenes

[A.5.1:12] Added an option to rename or not rename tabs and buttons when renumbering.

[A.5.0:11] Added Tab to context menu
    * Added the option to create a Tab to TabContext
    * Added the option for the tabConainter to be automatically strectched to fill whatever object is it in, set to default.

[A.4.0:10] Added Move tab functions
    * Added MoveTabUp and MoveTabDown to TabManager
    * Added corresponding buttons to TabInspectors
    * Added some funtions to TabManager to make added and removing tabs at the beginning and end more accessable.

[A.3.0:9] Added InsertTab and fixed rigid hierarchy
    * Added InsertTab to TabManager
    * Added buttons to inspectors which use InsertTab
    * Made it so that the inspector can call the correct TabManager without a rigid hierarchy, by editing it, and adding to TabContext, TabUtil, and Tab classes.

[A.2.2:8] Refined the hot fix for undoing a tab.

[A.2.1:7]
    * Did a hot fix

[A.2.0:6]
    * Added TabContainer to the context menu.
    * Added RemoveTab function to TabManager
    * Switched all tab classes to the Chimeforest.TabManager namespace
    * BUG on Remove tab, it is not undoing properly..

[A.1.5:6] Figured out how to undo Switch Tab!


[A.1.4:5]TabButtons/TabPanels no longer need to be directly under TabContainer

[A.1.3:4] Added large and small image mockups

[A.1.2:3] Added Icon
    * Added Tab Icon for unity store

[A.1.1:2] Ran into the undo bug

    * Added TabInspectors to display the GUI for the unity editor inspector.
    * Added TabUtilMenu so the inspector had something to attach onto for
    TabContainer, TabPanels, and TabButtons.
    * Tried to add Undo code in the SwitchTab function, but I ran into the
    same problem I ran into last time where the currentTab variable is not
    reset after an undo.

[A.1.0:1] Added the very basic stuff

    * Added TabManager class & functions (SetLists, Renumber, SwitchTab)
    * Added Tab class
    * Added TabButton class
    * Todo next, add button to inspector and undo switching tabs in editor.


[0.0.0:0] First commit

    A blank unity project
